Terminals unused in grammar

   "constante real"


State 7 conflicts: 2 shift/reduce
State 11 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_def

    2 class_def: "'class'" class_name '{' optional_field_decl_list optional_method_decl_list '}'

    3 optional_field_decl_list: field_decl_list
    4                         | /* empty */

    5 optional_method_decl_list: method_decl_list
    6                          | /* empty */

    7 field_decl_list: field_decl_list field_decl
    8                | field_decl

    9 method_decl_list: method_decl_list method_decl
   10                 | method_decl

   11 class_name: "'identificador'"

   12 field_decl: type var_list ';'

   13 var_list: var_list ',' var
   14         | var

   15 var: "'identificador'" optional_initialization
   16    | "'identificador'" '[' "constante entera" ']'

   17 optional_initialization: '=' constant
   18                        | /* empty */

   19 method_decl: return_type "'identificador'" '(' opt_parameter_decl_list ')' block

   20 return_type: type
   21            | "'void'"

   22 opt_parameter_decl_list: parameter_decl_list
   23                        | /* empty */

   24 parameter_decl_list: parameter_decl_list ',' parameter_decl
   25                    | parameter_decl

   26 parameter_decl: type "'identificador'"

   27 block: '{' opt_statement_list '}'

   28 opt_statement_list: statement_list
   29                   | /* empty */

   30 type: "'int'"
   31     | "'boolean'"

   32 statement_list: statement_list statement
   33               | statement

   34 statement: assign ';'
   35          | local_variable_decl ';'
   36          | method_call ';'
   37          | if_statement
   38          | while_statement
   39          | for_statement
   40          | return_statement ';'
   41          | break_statement ';'
   42          | continue_statement ';'
   43          | block

   44 local_variable_decl: type local_variable_list

   45 local_variable_list: local_variable_list ',' local_variable
   46                    | local_variable

   47 local_variable: "'identificador'"

   48 assign: lvalue '=' expr

   49 method_call: method_name '(' opt_method_call_argument_list ')'
   50            | "'print'" print_argument_list
   51            | "'read'" read_argument_list

   52 method_name: "'identificador'"

   53 opt_method_call_argument_list: method_call_argument_list
   54                              | /* empty */

   55 method_call_argument_list: method_call_argument_list ',' expr
   56                          | expr

   57 print_argument_list: print_argument_list ',' print_argument
   58                    | print_argument

   59 print_argument: "constante de cadena"
   60               | expr

   61 read_argument_list: read_argument_list ',' lvalue
   62                   | lvalue

   63 lvalue: "'identificador'" opt_array_dimension

   64 opt_array_dimension: '[' expr ']'
   65                    | /* empty */

   66 if_statement: "'if'" '(' expr ')' block opt_else

   67 opt_else: "'else'" block
   68         | /* empty */

   69 while_statement: "'while'" '(' expr ')' block

   70 for_statement: "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list ')' block

   71 for_assignment_list: for_assignment_list ',' assign
   72                    | assign

   73 return_statement: "'return'" opt_expr

   74 break_statement: "'break'"

   75 continue_statement: "'continue'"

   76 opt_expr: expr
   77         | /* empty */

   78 expr: expr "operador booleano 'or'" bool_term
   79     | bool_term

   80 bool_term: bool_term "operador booleano 'and'" relational_expr
   81          | relational_expr

   82 relational_expr: relational_expr ">" bit_shift_expr
   83                | relational_expr "<" bit_shift_expr
   84                | relational_expr ">=" bit_shift_expr
   85                | relational_expr "<=" bit_shift_expr
   86                | relational_expr "==" bit_shift_expr
   87                | relational_expr "!=" bit_shift_expr
   88                | bit_shift_expr

   89 bit_shift_expr: bit_shift_expr "<<" arith_expr
   90               | bit_shift_expr ">>" arith_expr
   91               | bit_shift_expr "rot" arith_expr
   92               | arith_expr

   93 arith_expr: arith_expr "+" arith_term
   94           | arith_expr "-" arith_term
   95           | arith_term

   96 arith_term: arith_term "*" factor
   97           | arith_term "/" factor
   98           | arith_term "%" factor
   99           | factor

  100 factor: '!' factor
  101       | lvalue
  102       | method_name '(' opt_method_call_argument_list ')'
  103       | constant
  104       | '(' expr ')'

  105 constant: "constante entera"
  106         | "constante caracter"
  107         | bool_constant

  108 bool_constant: "'true'"
  109              | "'false'"


Terminals, with rules where they appear

$end (0) 0
'!' (33) 100
'(' (40) 19 49 66 69 70 102 104
')' (41) 19 49 66 69 70 102 104
',' (44) 13 24 45 55 57 61 71
';' (59) 12 34 35 36 40 41 42 70
'=' (61) 17 48
'[' (91) 16 64
']' (93) 16 64
'{' (123) 2 27
'}' (125) 2 27
error (256)
"'identificador'" (258) 11 15 16 19 26 47 52 63
"'class'" (259) 2
"'break'" (260) 74
"'continue'" (261) 75
"'while'" (262) 69
"'for'" (263) 70
"'if'" (264) 66
"'else'" (265) 67
"'return'" (266) 73
"'read'" (267) 51
"'print'" (268) 50
"'true'" (269) 108
"'false'" (270) 109
"'int'" (271) 30
"'void'" (272) 21
"'boolean'" (273) 31
"operador booleano 'or'" (274) 78
"operador booleano 'and'" (275) 80
"<<" (276) 89
">>" (277) 90
"rot" (278) 91
">" (279) 82
"<" (280) 83
">=" (281) 84
"<=" (282) 85
"==" (283) 86
"!=" (284) 87
"+" (285) 93
"-" (286) 94
"*" (287) 96
"/" (288) 97
"%" (289) 98
"constante caracter" (290) 106
"constante entera" (291) 16 105
"constante real" (292)
"constante de cadena" (293) 59


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
class_def (51)
    on left: 2, on right: 1
optional_field_decl_list (52)
    on left: 3 4, on right: 2
optional_method_decl_list (53)
    on left: 5 6, on right: 2
field_decl_list (54)
    on left: 7 8, on right: 3 7
method_decl_list (55)
    on left: 9 10, on right: 5 9
class_name (56)
    on left: 11, on right: 2
field_decl (57)
    on left: 12, on right: 7 8
var_list (58)
    on left: 13 14, on right: 12 13
var (59)
    on left: 15 16, on right: 13 14
optional_initialization (60)
    on left: 17 18, on right: 15
method_decl (61)
    on left: 19, on right: 9 10
return_type (62)
    on left: 20 21, on right: 19
opt_parameter_decl_list (63)
    on left: 22 23, on right: 19
parameter_decl_list (64)
    on left: 24 25, on right: 22 24
parameter_decl (65)
    on left: 26, on right: 24 25
block (66)
    on left: 27, on right: 19 43 66 67 69 70
opt_statement_list (67)
    on left: 28 29, on right: 27
type (68)
    on left: 30 31, on right: 12 20 26 44
statement_list (69)
    on left: 32 33, on right: 28 32
statement (70)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 32 33
local_variable_decl (71)
    on left: 44, on right: 35
local_variable_list (72)
    on left: 45 46, on right: 44 45
local_variable (73)
    on left: 47, on right: 45 46
assign (74)
    on left: 48, on right: 34 71 72
method_call (75)
    on left: 49 50 51, on right: 36
method_name (76)
    on left: 52, on right: 49 102
opt_method_call_argument_list (77)
    on left: 53 54, on right: 49 102
method_call_argument_list (78)
    on left: 55 56, on right: 53 55
print_argument_list (79)
    on left: 57 58, on right: 50 57
print_argument (80)
    on left: 59 60, on right: 57 58
read_argument_list (81)
    on left: 61 62, on right: 51 61
lvalue (82)
    on left: 63, on right: 48 61 62 101
opt_array_dimension (83)
    on left: 64 65, on right: 63
if_statement (84)
    on left: 66, on right: 37
opt_else (85)
    on left: 67 68, on right: 66
while_statement (86)
    on left: 69, on right: 38
for_statement (87)
    on left: 70, on right: 39
for_assignment_list (88)
    on left: 71 72, on right: 70 71
return_statement (89)
    on left: 73, on right: 40
break_statement (90)
    on left: 74, on right: 41
continue_statement (91)
    on left: 75, on right: 42
opt_expr (92)
    on left: 76 77, on right: 73
expr (93)
    on left: 78 79, on right: 48 55 56 60 64 66 69 70 76 78 104
bool_term (94)
    on left: 80 81, on right: 78 79 80
relational_expr (95)
    on left: 82 83 84 85 86 87 88, on right: 80 81 82 83 84 85 86 87
bit_shift_expr (96)
    on left: 89 90 91 92, on right: 82 83 84 85 86 87 88 89 90 91
arith_expr (97)
    on left: 93 94 95, on right: 89 90 91 92 93 94
arith_term (98)
    on left: 96 97 98 99, on right: 93 94 95 96 97 98
factor (99)
    on left: 100 101 102 103 104, on right: 96 97 98 99 100
constant (100)
    on left: 105 106 107, on right: 17 103
bool_constant (101)
    on left: 108 109, on right: 107


state 0

    0 $accept: . program $end
    1 program: . class_def
    2 class_def: . "'class'" class_name '{' optional_field_decl_list optional_method_decl_list '}'

    "'class'"  shift, and go to state 1

    program    go to state 2
    class_def  go to state 3


state 1

    2 class_def: "'class'" . class_name '{' optional_field_decl_list optional_method_decl_list '}'
   11 class_name: . "'identificador'"

    "'identificador'"  shift, and go to state 4

    class_name  go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_def .

    $default  reduce using rule 1 (program)


state 4

   11 class_name: "'identificador'" .

    $default  reduce using rule 11 (class_name)


state 5

    2 class_def: "'class'" class_name . '{' optional_field_decl_list optional_method_decl_list '}'

    '{'  shift, and go to state 7


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 class_def: "'class'" class_name '{' . optional_field_decl_list optional_method_decl_list '}'
    3 optional_field_decl_list: . field_decl_list
    4                         | .  ["'int'", "'void'", "'boolean'", '}']
    7 field_decl_list: . field_decl_list field_decl
    8                | . field_decl
   12 field_decl: . type var_list ';'
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'boolean'"  shift, and go to state 9

    "'int'"      [reduce using rule 4 (optional_field_decl_list)]
    "'boolean'"  [reduce using rule 4 (optional_field_decl_list)]
    $default     reduce using rule 4 (optional_field_decl_list)

    optional_field_decl_list  go to state 10
    field_decl_list           go to state 11
    field_decl                go to state 12
    type                      go to state 13


state 8

   30 type: "'int'" .

    $default  reduce using rule 30 (type)


state 9

   31 type: "'boolean'" .

    $default  reduce using rule 31 (type)


state 10

    2 class_def: "'class'" class_name '{' optional_field_decl_list . optional_method_decl_list '}'
    5 optional_method_decl_list: . method_decl_list
    6                          | .  ['}']
    9 method_decl_list: . method_decl_list method_decl
   10                 | . method_decl
   19 method_decl: . return_type "'identificador'" '(' opt_parameter_decl_list ')' block
   20 return_type: . type
   21            | . "'void'"
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'void'"     shift, and go to state 14
    "'boolean'"  shift, and go to state 9

    $default  reduce using rule 6 (optional_method_decl_list)

    optional_method_decl_list  go to state 15
    method_decl_list           go to state 16
    method_decl                go to state 17
    return_type                go to state 18
    type                       go to state 19


state 11

    3 optional_field_decl_list: field_decl_list .  ["'int'", "'void'", "'boolean'", '}']
    7 field_decl_list: field_decl_list . field_decl
   12 field_decl: . type var_list ';'
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'boolean'"  shift, and go to state 9

    "'int'"      [reduce using rule 3 (optional_field_decl_list)]
    "'boolean'"  [reduce using rule 3 (optional_field_decl_list)]
    $default     reduce using rule 3 (optional_field_decl_list)

    field_decl  go to state 20
    type        go to state 13


state 12

    8 field_decl_list: field_decl .

    $default  reduce using rule 8 (field_decl_list)


state 13

   12 field_decl: type . var_list ';'
   13 var_list: . var_list ',' var
   14         | . var
   15 var: . "'identificador'" optional_initialization
   16    | . "'identificador'" '[' "constante entera" ']'

    "'identificador'"  shift, and go to state 21

    var_list  go to state 22
    var       go to state 23


state 14

   21 return_type: "'void'" .

    $default  reduce using rule 21 (return_type)


state 15

    2 class_def: "'class'" class_name '{' optional_field_decl_list optional_method_decl_list . '}'

    '}'  shift, and go to state 24


state 16

    5 optional_method_decl_list: method_decl_list .  ['}']
    9 method_decl_list: method_decl_list . method_decl
   19 method_decl: . return_type "'identificador'" '(' opt_parameter_decl_list ')' block
   20 return_type: . type
   21            | . "'void'"
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'void'"     shift, and go to state 14
    "'boolean'"  shift, and go to state 9

    $default  reduce using rule 5 (optional_method_decl_list)

    method_decl  go to state 25
    return_type  go to state 18
    type         go to state 19


state 17

   10 method_decl_list: method_decl .

    $default  reduce using rule 10 (method_decl_list)


state 18

   19 method_decl: return_type . "'identificador'" '(' opt_parameter_decl_list ')' block

    "'identificador'"  shift, and go to state 26


state 19

   20 return_type: type .

    $default  reduce using rule 20 (return_type)


state 20

    7 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 7 (field_decl_list)


state 21

   15 var: "'identificador'" . optional_initialization
   16    | "'identificador'" . '[' "constante entera" ']'
   17 optional_initialization: . '=' constant
   18                        | .  [';', ',']

    '['  shift, and go to state 27
    '='  shift, and go to state 28

    $default  reduce using rule 18 (optional_initialization)

    optional_initialization  go to state 29


state 22

   12 field_decl: type var_list . ';'
   13 var_list: var_list . ',' var

    ';'  shift, and go to state 30
    ','  shift, and go to state 31


state 23

   14 var_list: var .

    $default  reduce using rule 14 (var_list)


state 24

    2 class_def: "'class'" class_name '{' optional_field_decl_list optional_method_decl_list '}' .

    $default  reduce using rule 2 (class_def)


state 25

    9 method_decl_list: method_decl_list method_decl .

    $default  reduce using rule 9 (method_decl_list)


state 26

   19 method_decl: return_type "'identificador'" . '(' opt_parameter_decl_list ')' block

    '('  shift, and go to state 32


state 27

   16 var: "'identificador'" '[' . "constante entera" ']'

    "constante entera"  shift, and go to state 33


state 28

   17 optional_initialization: '=' . constant
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37

    constant       go to state 38
    bool_constant  go to state 39


state 29

   15 var: "'identificador'" optional_initialization .

    $default  reduce using rule 15 (var)


state 30

   12 field_decl: type var_list ';' .

    $default  reduce using rule 12 (field_decl)


state 31

   13 var_list: var_list ',' . var
   15 var: . "'identificador'" optional_initialization
   16    | . "'identificador'" '[' "constante entera" ']'

    "'identificador'"  shift, and go to state 21

    var  go to state 40


state 32

   19 method_decl: return_type "'identificador'" '(' . opt_parameter_decl_list ')' block
   22 opt_parameter_decl_list: . parameter_decl_list
   23                        | .  [')']
   24 parameter_decl_list: . parameter_decl_list ',' parameter_decl
   25                    | . parameter_decl
   26 parameter_decl: . type "'identificador'"
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'boolean'"  shift, and go to state 9

    $default  reduce using rule 23 (opt_parameter_decl_list)

    opt_parameter_decl_list  go to state 41
    parameter_decl_list      go to state 42
    parameter_decl           go to state 43
    type                     go to state 44


state 33

   16 var: "'identificador'" '[' "constante entera" . ']'

    ']'  shift, and go to state 45


state 34

  108 bool_constant: "'true'" .

    $default  reduce using rule 108 (bool_constant)


state 35

  109 bool_constant: "'false'" .

    $default  reduce using rule 109 (bool_constant)


state 36

  106 constant: "constante caracter" .

    $default  reduce using rule 106 (constant)


state 37

  105 constant: "constante entera" .

    $default  reduce using rule 105 (constant)


state 38

   17 optional_initialization: '=' constant .

    $default  reduce using rule 17 (optional_initialization)


state 39

  107 constant: bool_constant .

    $default  reduce using rule 107 (constant)


state 40

   13 var_list: var_list ',' var .

    $default  reduce using rule 13 (var_list)


state 41

   19 method_decl: return_type "'identificador'" '(' opt_parameter_decl_list . ')' block

    ')'  shift, and go to state 46


state 42

   22 opt_parameter_decl_list: parameter_decl_list .  [')']
   24 parameter_decl_list: parameter_decl_list . ',' parameter_decl

    ','  shift, and go to state 47

    $default  reduce using rule 22 (opt_parameter_decl_list)


state 43

   25 parameter_decl_list: parameter_decl .

    $default  reduce using rule 25 (parameter_decl_list)


state 44

   26 parameter_decl: type . "'identificador'"

    "'identificador'"  shift, and go to state 48


state 45

   16 var: "'identificador'" '[' "constante entera" ']' .

    $default  reduce using rule 16 (var)


state 46

   19 method_decl: return_type "'identificador'" '(' opt_parameter_decl_list ')' . block
   27 block: . '{' opt_statement_list '}'

    '{'  shift, and go to state 49

    block  go to state 50


state 47

   24 parameter_decl_list: parameter_decl_list ',' . parameter_decl
   26 parameter_decl: . type "'identificador'"
   30 type: . "'int'"
   31     | . "'boolean'"

    "'int'"      shift, and go to state 8
    "'boolean'"  shift, and go to state 9

    parameter_decl  go to state 51
    type            go to state 44


state 48

   26 parameter_decl: type "'identificador'" .

    $default  reduce using rule 26 (parameter_decl)


state 49

   27 block: . '{' opt_statement_list '}'
   27      | '{' . opt_statement_list '}'
   28 opt_statement_list: . statement_list
   29                   | .  ['}']
   30 type: . "'int'"
   31     | . "'boolean'"
   32 statement_list: . statement_list statement
   33               | . statement
   34 statement: . assign ';'
   35          | . local_variable_decl ';'
   36          | . method_call ';'
   37          | . if_statement
   38          | . while_statement
   39          | . for_statement
   40          | . return_statement ';'
   41          | . break_statement ';'
   42          | . continue_statement ';'
   43          | . block
   44 local_variable_decl: . type local_variable_list
   48 assign: . lvalue '=' expr
   49 method_call: . method_name '(' opt_method_call_argument_list ')'
   50            | . "'print'" print_argument_list
   51            | . "'read'" read_argument_list
   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   66 if_statement: . "'if'" '(' expr ')' block opt_else
   69 while_statement: . "'while'" '(' expr ')' block
   70 for_statement: . "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list ')' block
   73 return_statement: . "'return'" opt_expr
   74 break_statement: . "'break'"
   75 continue_statement: . "'continue'"

    "'identificador'"  shift, and go to state 52
    "'break'"          shift, and go to state 53
    "'continue'"       shift, and go to state 54
    "'while'"          shift, and go to state 55
    "'for'"            shift, and go to state 56
    "'if'"             shift, and go to state 57
    "'return'"         shift, and go to state 58
    "'read'"           shift, and go to state 59
    "'print'"          shift, and go to state 60
    "'int'"            shift, and go to state 8
    "'boolean'"        shift, and go to state 9
    '{'                shift, and go to state 49

    $default  reduce using rule 29 (opt_statement_list)

    block                go to state 61
    opt_statement_list   go to state 62
    type                 go to state 63
    statement_list       go to state 64
    statement            go to state 65
    local_variable_decl  go to state 66
    assign               go to state 67
    method_call          go to state 68
    method_name          go to state 69
    lvalue               go to state 70
    if_statement         go to state 71
    while_statement      go to state 72
    for_statement        go to state 73
    return_statement     go to state 74
    break_statement      go to state 75
    continue_statement   go to state 76


state 50

   19 method_decl: return_type "'identificador'" '(' opt_parameter_decl_list ')' block .

    $default  reduce using rule 19 (method_decl)


state 51

   24 parameter_decl_list: parameter_decl_list ',' parameter_decl .

    $default  reduce using rule 24 (parameter_decl_list)


state 52

   52 method_name: "'identificador'" .  ['(']
   63 lvalue: "'identificador'" . opt_array_dimension
   64 opt_array_dimension: . '[' expr ']'
   65                    | .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", "+", "-", "*", "/", "%", ';', ',', ']', '=', ')']

    '['  shift, and go to state 77

    '('       reduce using rule 52 (method_name)
    $default  reduce using rule 65 (opt_array_dimension)

    opt_array_dimension  go to state 78


state 53

   74 break_statement: "'break'" .

    $default  reduce using rule 74 (break_statement)


state 54

   75 continue_statement: "'continue'" .

    $default  reduce using rule 75 (continue_statement)


state 55

   69 while_statement: "'while'" . '(' expr ')' block

    '('  shift, and go to state 79


state 56

   70 for_statement: "'for'" . '(' for_assignment_list ';' expr ';' for_assignment_list ')' block

    '('  shift, and go to state 80


state 57

   66 if_statement: "'if'" . '(' expr ')' block opt_else

    '('  shift, and go to state 81


state 58

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   73 return_statement: "'return'" . opt_expr
   76 opt_expr: . expr
   77         | .  [';']
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    $default  reduce using rule 77 (opt_expr)

    method_name      go to state 84
    lvalue           go to state 85
    opt_expr         go to state 86
    expr             go to state 87
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 59

   51 method_call: "'read'" . read_argument_list
   61 read_argument_list: . read_argument_list ',' lvalue
   62                   | . lvalue
   63 lvalue: . "'identificador'" opt_array_dimension

    "'identificador'"  shift, and go to state 95

    read_argument_list  go to state 96
    lvalue              go to state 97


state 60

   50 method_call: "'print'" . print_argument_list
   52 method_name: . "'identificador'"
   57 print_argument_list: . print_argument_list ',' print_argument
   58                    | . print_argument
   59 print_argument: . "constante de cadena"
   60               | . expr
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"      shift, and go to state 52
    "'true'"               shift, and go to state 34
    "'false'"              shift, and go to state 35
    "constante caracter"   shift, and go to state 36
    "constante entera"     shift, and go to state 37
    "constante de cadena"  shift, and go to state 98
    '('                    shift, and go to state 82
    '!'                    shift, and go to state 83

    method_name          go to state 84
    print_argument_list  go to state 99
    print_argument       go to state 100
    lvalue               go to state 85
    expr                 go to state 101
    bool_term            go to state 88
    relational_expr      go to state 89
    bit_shift_expr       go to state 90
    arith_expr           go to state 91
    arith_term           go to state 92
    factor               go to state 93
    constant             go to state 94
    bool_constant        go to state 39


state 61

   43 statement: block .

    $default  reduce using rule 43 (statement)


state 62

   27 block: '{' opt_statement_list . '}'

    '}'  shift, and go to state 102


state 63

   44 local_variable_decl: type . local_variable_list
   45 local_variable_list: . local_variable_list ',' local_variable
   46                    | . local_variable
   47 local_variable: . "'identificador'"

    "'identificador'"  shift, and go to state 103

    local_variable_list  go to state 104
    local_variable       go to state 105


state 64

   27 block: . '{' opt_statement_list '}'
   28 opt_statement_list: statement_list .  ['}']
   30 type: . "'int'"
   31     | . "'boolean'"
   32 statement_list: statement_list . statement
   34 statement: . assign ';'
   35          | . local_variable_decl ';'
   36          | . method_call ';'
   37          | . if_statement
   38          | . while_statement
   39          | . for_statement
   40          | . return_statement ';'
   41          | . break_statement ';'
   42          | . continue_statement ';'
   43          | . block
   44 local_variable_decl: . type local_variable_list
   48 assign: . lvalue '=' expr
   49 method_call: . method_name '(' opt_method_call_argument_list ')'
   50            | . "'print'" print_argument_list
   51            | . "'read'" read_argument_list
   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   66 if_statement: . "'if'" '(' expr ')' block opt_else
   69 while_statement: . "'while'" '(' expr ')' block
   70 for_statement: . "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list ')' block
   73 return_statement: . "'return'" opt_expr
   74 break_statement: . "'break'"
   75 continue_statement: . "'continue'"

    "'identificador'"  shift, and go to state 52
    "'break'"          shift, and go to state 53
    "'continue'"       shift, and go to state 54
    "'while'"          shift, and go to state 55
    "'for'"            shift, and go to state 56
    "'if'"             shift, and go to state 57
    "'return'"         shift, and go to state 58
    "'read'"           shift, and go to state 59
    "'print'"          shift, and go to state 60
    "'int'"            shift, and go to state 8
    "'boolean'"        shift, and go to state 9
    '{'                shift, and go to state 49

    $default  reduce using rule 28 (opt_statement_list)

    block                go to state 61
    type                 go to state 63
    statement            go to state 106
    local_variable_decl  go to state 66
    assign               go to state 67
    method_call          go to state 68
    method_name          go to state 69
    lvalue               go to state 70
    if_statement         go to state 71
    while_statement      go to state 72
    for_statement        go to state 73
    return_statement     go to state 74
    break_statement      go to state 75
    continue_statement   go to state 76


state 65

   33 statement_list: statement .

    $default  reduce using rule 33 (statement_list)


state 66

   35 statement: local_variable_decl . ';'

    ';'  shift, and go to state 107


state 67

   34 statement: assign . ';'

    ';'  shift, and go to state 108


state 68

   36 statement: method_call . ';'

    ';'  shift, and go to state 109


state 69

   49 method_call: method_name . '(' opt_method_call_argument_list ')'

    '('  shift, and go to state 110


state 70

   48 assign: lvalue . '=' expr

    '='  shift, and go to state 111


state 71

   37 statement: if_statement .

    $default  reduce using rule 37 (statement)


state 72

   38 statement: while_statement .

    $default  reduce using rule 38 (statement)


state 73

   39 statement: for_statement .

    $default  reduce using rule 39 (statement)


state 74

   40 statement: return_statement . ';'

    ';'  shift, and go to state 112


state 75

   41 statement: break_statement . ';'

    ';'  shift, and go to state 113


state 76

   42 statement: continue_statement . ';'

    ';'  shift, and go to state 114


state 77

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   64 opt_array_dimension: '[' . expr ']'
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 115
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 78

   63 lvalue: "'identificador'" opt_array_dimension .

    $default  reduce using rule 63 (lvalue)


state 79

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   69 while_statement: "'while'" '(' . expr ')' block
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 116
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 80

   48 assign: . lvalue '=' expr
   63 lvalue: . "'identificador'" opt_array_dimension
   70 for_statement: "'for'" '(' . for_assignment_list ';' expr ';' for_assignment_list ')' block
   71 for_assignment_list: . for_assignment_list ',' assign
   72                    | . assign

    "'identificador'"  shift, and go to state 95

    assign               go to state 117
    lvalue               go to state 70
    for_assignment_list  go to state 118


state 81

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   66 if_statement: "'if'" '(' . expr ')' block opt_else
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 119
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 82

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  104       | '(' . expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 120
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 83

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
  100 factor: . '!' factor
  100       | '!' . factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    factor         go to state 121
    constant       go to state 94
    bool_constant  go to state 39


state 84

  102 factor: method_name . '(' opt_method_call_argument_list ')'

    '('  shift, and go to state 122


state 85

  101 factor: lvalue .

    $default  reduce using rule 101 (factor)


state 86

   73 return_statement: "'return'" opt_expr .

    $default  reduce using rule 73 (return_statement)


state 87

   76 opt_expr: expr .  [';']
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123

    $default  reduce using rule 76 (opt_expr)


state 88

   79 expr: bool_term .  ["operador booleano 'or'", ';', ',', ']', ')']
   80 bool_term: bool_term . "operador booleano 'and'" relational_expr

    "operador booleano 'and'"  shift, and go to state 124

    $default  reduce using rule 79 (expr)


state 89

   81 bool_term: relational_expr .  ["operador booleano 'or'", "operador booleano 'and'", ';', ',', ']', ')']
   82 relational_expr: relational_expr . ">" bit_shift_expr
   83                | relational_expr . "<" bit_shift_expr
   84                | relational_expr . ">=" bit_shift_expr
   85                | relational_expr . "<=" bit_shift_expr
   86                | relational_expr . "==" bit_shift_expr
   87                | relational_expr . "!=" bit_shift_expr

    ">"   shift, and go to state 125
    "<"   shift, and go to state 126
    ">="  shift, and go to state 127
    "<="  shift, and go to state 128
    "=="  shift, and go to state 129
    "!="  shift, and go to state 130

    $default  reduce using rule 81 (bool_term)


state 90

   88 relational_expr: bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 88 (relational_expr)


state 91

   92 bit_shift_expr: arith_expr .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   93 arith_expr: arith_expr . "+" arith_term
   94           | arith_expr . "-" arith_term

    "+"  shift, and go to state 134
    "-"  shift, and go to state 135

    $default  reduce using rule 92 (bit_shift_expr)


state 92

   95 arith_expr: arith_term .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", "+", "-", ';', ',', ']', ')']
   96 arith_term: arith_term . "*" factor
   97           | arith_term . "/" factor
   98           | arith_term . "%" factor

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 95 (arith_expr)


state 93

   99 arith_term: factor .

    $default  reduce using rule 99 (arith_term)


state 94

  103 factor: constant .

    $default  reduce using rule 103 (factor)


state 95

   63 lvalue: "'identificador'" . opt_array_dimension
   64 opt_array_dimension: . '[' expr ']'
   65                    | .  [';', ',', '=']

    '['  shift, and go to state 77

    $default  reduce using rule 65 (opt_array_dimension)

    opt_array_dimension  go to state 78


state 96

   51 method_call: "'read'" read_argument_list .  [';']
   61 read_argument_list: read_argument_list . ',' lvalue

    ','  shift, and go to state 139

    $default  reduce using rule 51 (method_call)


state 97

   62 read_argument_list: lvalue .

    $default  reduce using rule 62 (read_argument_list)


state 98

   59 print_argument: "constante de cadena" .

    $default  reduce using rule 59 (print_argument)


state 99

   50 method_call: "'print'" print_argument_list .  [';']
   57 print_argument_list: print_argument_list . ',' print_argument

    ','  shift, and go to state 140

    $default  reduce using rule 50 (method_call)


state 100

   58 print_argument_list: print_argument .

    $default  reduce using rule 58 (print_argument_list)


state 101

   60 print_argument: expr .  [';', ',']
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123

    $default  reduce using rule 60 (print_argument)


state 102

   27 block: '{' opt_statement_list '}' .

    $default  reduce using rule 27 (block)


state 103

   47 local_variable: "'identificador'" .

    $default  reduce using rule 47 (local_variable)


state 104

   44 local_variable_decl: type local_variable_list .  [';']
   45 local_variable_list: local_variable_list . ',' local_variable

    ','  shift, and go to state 141

    $default  reduce using rule 44 (local_variable_decl)


state 105

   46 local_variable_list: local_variable .

    $default  reduce using rule 46 (local_variable_list)


state 106

   32 statement_list: statement_list statement .

    $default  reduce using rule 32 (statement_list)


state 107

   35 statement: local_variable_decl ';' .

    $default  reduce using rule 35 (statement)


state 108

   34 statement: assign ';' .

    $default  reduce using rule 34 (statement)


state 109

   36 statement: method_call ';' .

    $default  reduce using rule 36 (statement)


state 110

   49 method_call: method_name '(' . opt_method_call_argument_list ')'
   52 method_name: . "'identificador'"
   53 opt_method_call_argument_list: . method_call_argument_list
   54                              | .  [')']
   55 method_call_argument_list: . method_call_argument_list ',' expr
   56                          | . expr
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    $default  reduce using rule 54 (opt_method_call_argument_list)

    method_name                    go to state 84
    opt_method_call_argument_list  go to state 142
    method_call_argument_list      go to state 143
    lvalue                         go to state 85
    expr                           go to state 144
    bool_term                      go to state 88
    relational_expr                go to state 89
    bit_shift_expr                 go to state 90
    arith_expr                     go to state 91
    arith_term                     go to state 92
    factor                         go to state 93
    constant                       go to state 94
    bool_constant                  go to state 39


state 111

   48 assign: lvalue '=' . expr
   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 145
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 112

   40 statement: return_statement ';' .

    $default  reduce using rule 40 (statement)


state 113

   41 statement: break_statement ';' .

    $default  reduce using rule 41 (statement)


state 114

   42 statement: continue_statement ';' .

    $default  reduce using rule 42 (statement)


state 115

   64 opt_array_dimension: '[' expr . ']'
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123
    ']'                       shift, and go to state 146


state 116

   69 while_statement: "'while'" '(' expr . ')' block
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123
    ')'                       shift, and go to state 147


state 117

   72 for_assignment_list: assign .

    $default  reduce using rule 72 (for_assignment_list)


state 118

   70 for_statement: "'for'" '(' for_assignment_list . ';' expr ';' for_assignment_list ')' block
   71 for_assignment_list: for_assignment_list . ',' assign

    ';'  shift, and go to state 148
    ','  shift, and go to state 149


state 119

   66 if_statement: "'if'" '(' expr . ')' block opt_else
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123
    ')'                       shift, and go to state 150


state 120

   78 expr: expr . "operador booleano 'or'" bool_term
  104 factor: '(' expr . ')'

    "operador booleano 'or'"  shift, and go to state 123
    ')'                       shift, and go to state 151


state 121

  100 factor: '!' factor .

    $default  reduce using rule 100 (factor)


state 122

   52 method_name: . "'identificador'"
   53 opt_method_call_argument_list: . method_call_argument_list
   54                              | .  [')']
   55 method_call_argument_list: . method_call_argument_list ',' expr
   56                          | . expr
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  102       | method_name '(' . opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    $default  reduce using rule 54 (opt_method_call_argument_list)

    method_name                    go to state 84
    opt_method_call_argument_list  go to state 152
    method_call_argument_list      go to state 143
    lvalue                         go to state 85
    expr                           go to state 144
    bool_term                      go to state 88
    relational_expr                go to state 89
    bit_shift_expr                 go to state 90
    arith_expr                     go to state 91
    arith_term                     go to state 92
    factor                         go to state 93
    constant                       go to state 94
    bool_constant                  go to state 39


state 123

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: expr "operador booleano 'or'" . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    bool_term        go to state 153
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 124

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   80 bool_term: bool_term "operador booleano 'and'" . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    relational_expr  go to state 154
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 125

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   82 relational_expr: relational_expr ">" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 155
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 126

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   83 relational_expr: relational_expr "<" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 156
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 127

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   84 relational_expr: relational_expr ">=" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 157
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 128

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   85 relational_expr: relational_expr "<=" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 158
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 129

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   86 relational_expr: relational_expr "==" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 159
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 130

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   87 relational_expr: relational_expr "!=" . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name     go to state 84
    lvalue          go to state 85
    bit_shift_expr  go to state 160
    arith_expr      go to state 91
    arith_term      go to state 92
    factor          go to state 93
    constant        go to state 94
    bool_constant   go to state 39


state 131

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   89 bit_shift_expr: bit_shift_expr "<<" . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    arith_expr     go to state 161
    arith_term     go to state 92
    factor         go to state 93
    constant       go to state 94
    bool_constant  go to state 39


state 132

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   90 bit_shift_expr: bit_shift_expr ">>" . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    arith_expr     go to state 162
    arith_term     go to state 92
    factor         go to state 93
    constant       go to state 94
    bool_constant  go to state 39


state 133

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   91 bit_shift_expr: bit_shift_expr "rot" . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    arith_expr     go to state 163
    arith_term     go to state 92
    factor         go to state 93
    constant       go to state 94
    bool_constant  go to state 39


state 134

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   93 arith_expr: arith_expr "+" . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    arith_term     go to state 164
    factor         go to state 93
    constant       go to state 94
    bool_constant  go to state 39


state 135

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   94 arith_expr: arith_expr "-" . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    arith_term     go to state 165
    factor         go to state 93
    constant       go to state 94
    bool_constant  go to state 39


state 136

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   96 arith_term: arith_term "*" . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    factor         go to state 166
    constant       go to state 94
    bool_constant  go to state 39


state 137

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   97 arith_term: arith_term "/" . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    factor         go to state 167
    constant       go to state 94
    bool_constant  go to state 39


state 138

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   98 arith_term: arith_term "%" . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name    go to state 84
    lvalue         go to state 85
    factor         go to state 168
    constant       go to state 94
    bool_constant  go to state 39


state 139

   61 read_argument_list: read_argument_list ',' . lvalue
   63 lvalue: . "'identificador'" opt_array_dimension

    "'identificador'"  shift, and go to state 95

    lvalue  go to state 169


state 140

   52 method_name: . "'identificador'"
   57 print_argument_list: print_argument_list ',' . print_argument
   59 print_argument: . "constante de cadena"
   60               | . expr
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"      shift, and go to state 52
    "'true'"               shift, and go to state 34
    "'false'"              shift, and go to state 35
    "constante caracter"   shift, and go to state 36
    "constante entera"     shift, and go to state 37
    "constante de cadena"  shift, and go to state 98
    '('                    shift, and go to state 82
    '!'                    shift, and go to state 83

    method_name      go to state 84
    print_argument   go to state 170
    lvalue           go to state 85
    expr             go to state 101
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 141

   45 local_variable_list: local_variable_list ',' . local_variable
   47 local_variable: . "'identificador'"

    "'identificador'"  shift, and go to state 103

    local_variable  go to state 171


state 142

   49 method_call: method_name '(' opt_method_call_argument_list . ')'

    ')'  shift, and go to state 172


state 143

   53 opt_method_call_argument_list: method_call_argument_list .  [')']
   55 method_call_argument_list: method_call_argument_list . ',' expr

    ','  shift, and go to state 173

    $default  reduce using rule 53 (opt_method_call_argument_list)


state 144

   56 method_call_argument_list: expr .  [',', ')']
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123

    $default  reduce using rule 56 (method_call_argument_list)


state 145

   48 assign: lvalue '=' expr .  [';', ',', ')']
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123

    $default  reduce using rule 48 (assign)


state 146

   64 opt_array_dimension: '[' expr ']' .

    $default  reduce using rule 64 (opt_array_dimension)


state 147

   27 block: . '{' opt_statement_list '}'
   69 while_statement: "'while'" '(' expr ')' . block

    '{'  shift, and go to state 49

    block  go to state 174


state 148

   52 method_name: . "'identificador'"
   63 lvalue: . "'identificador'" opt_array_dimension
   70 for_statement: "'for'" '(' for_assignment_list ';' . expr ';' for_assignment_list ')' block
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 175
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 149

   48 assign: . lvalue '=' expr
   63 lvalue: . "'identificador'" opt_array_dimension
   71 for_assignment_list: for_assignment_list ',' . assign

    "'identificador'"  shift, and go to state 95

    assign  go to state 176
    lvalue  go to state 70


state 150

   27 block: . '{' opt_statement_list '}'
   66 if_statement: "'if'" '(' expr ')' . block opt_else

    '{'  shift, and go to state 49

    block  go to state 177


state 151

  104 factor: '(' expr ')' .

    $default  reduce using rule 104 (factor)


state 152

  102 factor: method_name '(' opt_method_call_argument_list . ')'

    ')'  shift, and go to state 178


state 153

   78 expr: expr "operador booleano 'or'" bool_term .  ["operador booleano 'or'", ';', ',', ']', ')']
   80 bool_term: bool_term . "operador booleano 'and'" relational_expr

    "operador booleano 'and'"  shift, and go to state 124

    $default  reduce using rule 78 (expr)


state 154

   80 bool_term: bool_term "operador booleano 'and'" relational_expr .  ["operador booleano 'or'", "operador booleano 'and'", ';', ',', ']', ')']
   82 relational_expr: relational_expr . ">" bit_shift_expr
   83                | relational_expr . "<" bit_shift_expr
   84                | relational_expr . ">=" bit_shift_expr
   85                | relational_expr . "<=" bit_shift_expr
   86                | relational_expr . "==" bit_shift_expr
   87                | relational_expr . "!=" bit_shift_expr

    ">"   shift, and go to state 125
    "<"   shift, and go to state 126
    ">="  shift, and go to state 127
    "<="  shift, and go to state 128
    "=="  shift, and go to state 129
    "!="  shift, and go to state 130

    $default  reduce using rule 80 (bool_term)


state 155

   82 relational_expr: relational_expr ">" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 82 (relational_expr)


state 156

   83 relational_expr: relational_expr "<" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 83 (relational_expr)


state 157

   84 relational_expr: relational_expr ">=" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 84 (relational_expr)


state 158

   85 relational_expr: relational_expr "<=" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 85 (relational_expr)


state 159

   86 relational_expr: relational_expr "==" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 86 (relational_expr)


state 160

   87 relational_expr: relational_expr "!=" bit_shift_expr .  ["operador booleano 'or'", "operador booleano 'and'", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   89 bit_shift_expr: bit_shift_expr . "<<" arith_expr
   90               | bit_shift_expr . ">>" arith_expr
   91               | bit_shift_expr . "rot" arith_expr

    "<<"   shift, and go to state 131
    ">>"   shift, and go to state 132
    "rot"  shift, and go to state 133

    $default  reduce using rule 87 (relational_expr)


state 161

   89 bit_shift_expr: bit_shift_expr "<<" arith_expr .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   93 arith_expr: arith_expr . "+" arith_term
   94           | arith_expr . "-" arith_term

    "+"  shift, and go to state 134
    "-"  shift, and go to state 135

    $default  reduce using rule 89 (bit_shift_expr)


state 162

   90 bit_shift_expr: bit_shift_expr ">>" arith_expr .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   93 arith_expr: arith_expr . "+" arith_term
   94           | arith_expr . "-" arith_term

    "+"  shift, and go to state 134
    "-"  shift, and go to state 135

    $default  reduce using rule 90 (bit_shift_expr)


state 163

   91 bit_shift_expr: bit_shift_expr "rot" arith_expr .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", ';', ',', ']', ')']
   93 arith_expr: arith_expr . "+" arith_term
   94           | arith_expr . "-" arith_term

    "+"  shift, and go to state 134
    "-"  shift, and go to state 135

    $default  reduce using rule 91 (bit_shift_expr)


state 164

   93 arith_expr: arith_expr "+" arith_term .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", "+", "-", ';', ',', ']', ')']
   96 arith_term: arith_term . "*" factor
   97           | arith_term . "/" factor
   98           | arith_term . "%" factor

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 93 (arith_expr)


state 165

   94 arith_expr: arith_expr "-" arith_term .  ["operador booleano 'or'", "operador booleano 'and'", "<<", ">>", "rot", ">", "<", ">=", "<=", "==", "!=", "+", "-", ';', ',', ']', ')']
   96 arith_term: arith_term . "*" factor
   97           | arith_term . "/" factor
   98           | arith_term . "%" factor

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 94 (arith_expr)


state 166

   96 arith_term: arith_term "*" factor .

    $default  reduce using rule 96 (arith_term)


state 167

   97 arith_term: arith_term "/" factor .

    $default  reduce using rule 97 (arith_term)


state 168

   98 arith_term: arith_term "%" factor .

    $default  reduce using rule 98 (arith_term)


state 169

   61 read_argument_list: read_argument_list ',' lvalue .

    $default  reduce using rule 61 (read_argument_list)


state 170

   57 print_argument_list: print_argument_list ',' print_argument .

    $default  reduce using rule 57 (print_argument_list)


state 171

   45 local_variable_list: local_variable_list ',' local_variable .

    $default  reduce using rule 45 (local_variable_list)


state 172

   49 method_call: method_name '(' opt_method_call_argument_list ')' .

    $default  reduce using rule 49 (method_call)


state 173

   52 method_name: . "'identificador'"
   55 method_call_argument_list: method_call_argument_list ',' . expr
   63 lvalue: . "'identificador'" opt_array_dimension
   78 expr: . expr "operador booleano 'or'" bool_term
   79     | . bool_term
   80 bool_term: . bool_term "operador booleano 'and'" relational_expr
   81          | . relational_expr
   82 relational_expr: . relational_expr ">" bit_shift_expr
   83                | . relational_expr "<" bit_shift_expr
   84                | . relational_expr ">=" bit_shift_expr
   85                | . relational_expr "<=" bit_shift_expr
   86                | . relational_expr "==" bit_shift_expr
   87                | . relational_expr "!=" bit_shift_expr
   88                | . bit_shift_expr
   89 bit_shift_expr: . bit_shift_expr "<<" arith_expr
   90               | . bit_shift_expr ">>" arith_expr
   91               | . bit_shift_expr "rot" arith_expr
   92               | . arith_expr
   93 arith_expr: . arith_expr "+" arith_term
   94           | . arith_expr "-" arith_term
   95           | . arith_term
   96 arith_term: . arith_term "*" factor
   97           | . arith_term "/" factor
   98           | . arith_term "%" factor
   99           | . factor
  100 factor: . '!' factor
  101       | . lvalue
  102       | . method_name '(' opt_method_call_argument_list ')'
  103       | . constant
  104       | . '(' expr ')'
  105 constant: . "constante entera"
  106         | . "constante caracter"
  107         | . bool_constant
  108 bool_constant: . "'true'"
  109              | . "'false'"

    "'identificador'"     shift, and go to state 52
    "'true'"              shift, and go to state 34
    "'false'"             shift, and go to state 35
    "constante caracter"  shift, and go to state 36
    "constante entera"    shift, and go to state 37
    '('                   shift, and go to state 82
    '!'                   shift, and go to state 83

    method_name      go to state 84
    lvalue           go to state 85
    expr             go to state 179
    bool_term        go to state 88
    relational_expr  go to state 89
    bit_shift_expr   go to state 90
    arith_expr       go to state 91
    arith_term       go to state 92
    factor           go to state 93
    constant         go to state 94
    bool_constant    go to state 39


state 174

   69 while_statement: "'while'" '(' expr ')' block .

    $default  reduce using rule 69 (while_statement)


state 175

   70 for_statement: "'for'" '(' for_assignment_list ';' expr . ';' for_assignment_list ')' block
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123
    ';'                       shift, and go to state 180


state 176

   71 for_assignment_list: for_assignment_list ',' assign .

    $default  reduce using rule 71 (for_assignment_list)


state 177

   66 if_statement: "'if'" '(' expr ')' block . opt_else
   67 opt_else: . "'else'" block
   68         | .  ["'identificador'", "'break'", "'continue'", "'while'", "'for'", "'if'", "'return'", "'read'", "'print'", "'int'", "'boolean'", '{', '}']

    "'else'"  shift, and go to state 181

    $default  reduce using rule 68 (opt_else)

    opt_else  go to state 182


state 178

  102 factor: method_name '(' opt_method_call_argument_list ')' .

    $default  reduce using rule 102 (factor)


state 179

   55 method_call_argument_list: method_call_argument_list ',' expr .  [',', ')']
   78 expr: expr . "operador booleano 'or'" bool_term

    "operador booleano 'or'"  shift, and go to state 123

    $default  reduce using rule 55 (method_call_argument_list)


state 180

   48 assign: . lvalue '=' expr
   63 lvalue: . "'identificador'" opt_array_dimension
   70 for_statement: "'for'" '(' for_assignment_list ';' expr ';' . for_assignment_list ')' block
   71 for_assignment_list: . for_assignment_list ',' assign
   72                    | . assign

    "'identificador'"  shift, and go to state 95

    assign               go to state 117
    lvalue               go to state 70
    for_assignment_list  go to state 183


state 181

   27 block: . '{' opt_statement_list '}'
   67 opt_else: "'else'" . block

    '{'  shift, and go to state 49

    block  go to state 184


state 182

   66 if_statement: "'if'" '(' expr ')' block opt_else .

    $default  reduce using rule 66 (if_statement)


state 183

   70 for_statement: "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list . ')' block
   71 for_assignment_list: for_assignment_list . ',' assign

    ','  shift, and go to state 149
    ')'  shift, and go to state 185


state 184

   67 opt_else: "'else'" block .

    $default  reduce using rule 67 (opt_else)


state 185

   27 block: . '{' opt_statement_list '}'
   70 for_statement: "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list ')' . block

    '{'  shift, and go to state 49

    block  go to state 186


state 186

   70 for_statement: "'for'" '(' for_assignment_list ';' expr ';' for_assignment_list ')' block .

    $default  reduce using rule 70 (for_statement)
